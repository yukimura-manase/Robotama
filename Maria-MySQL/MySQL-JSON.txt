
< Generated Columns >

Geneterated Columnとは

実カラムの値を計算した結果 を格納する専⽤のカラムを作成できる

MySQL5.7.6で追加された機能で、計算結果をカラムにすることができます。

関数indexをシミュレートできる(生成列にindexを貼れるし、生成列で分割もできる)

MySQL5.7から使える。Oracleの仮想列に近い。

CREATE TABLEまたはALTER TABLE文の中で使用できる。

[GENERATED ALWAYS] as (expression) の構文で作成する。

MySQLのGenerated Columnsまとめ with Rails
https://qiita.com/naka_kyon/items/f3e19ab7a6275ab394bf






JSON型にindexも！MySQL 5.7のGenerated Columnsの可能性について探る
https://system.blog.uuum.jp/entry/mysql-generated-columns



-------------------------------------------------------------------------------------------------------------------------------------------------------


JSON型(インデックスあり)
Generated Column(生成カラム) を利用してJSON型の特定のキーにインデックスを貼ります。

ここでは、後述するレコード挿入のときに name というキーを含むJSONデータを格納する予定なので `col`->"$.name" とします。

JSON_UNQUOTE関数 で ダブルクォーテーション(") が取り除かれた形で生成している点も気をつけるポイントです。

mysql> CREATE TABLE `json_index_users` (
    ->   `id` int(11) NOT NULL AUTO_INCREMENT,
    ->   `col` JSON,
    ->   `col_name` varchar(30) GENERATED ALWAYS AS (JSON_UNQUOTE(`col`->"$.name")) VIRTUAL,
    ->   PRIMARY KEY (`id`),
    ->   KEY `col_name` (`col_name`)
    -> );
Query OK, 0 rows affected (0.05 sec)

mysql> SHOW COLUMNS FROM `json_index_users`;
+----------+-------------+------+-----+---------+-------------------+
| Field    | Type        | Null | Key | Default | Extra             |
+----------+-------------+------+-----+---------+-------------------+
| id       | int(11)     | NO   | PRI | NULL    | auto_increment    |
| col      | json        | YES  |     | NULL    |                   |
| col_name | varchar(30) | YES  | MUL | NULL    | VIRTUAL GENERATED |
+----------+-------------+------+-----+---------+-------------------+
3 rows in set (0.00 sec)




JSON型でインデックスを活用する方法と性能比較
https://www.wakuwakubank.com/posts/509-mysql-json-index/




