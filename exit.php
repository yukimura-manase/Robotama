<?php

$robotama = 'ロボ玉';

$hakutou = '白桃';

$momo = 'ももちゃん';

$saitama = 'さいたま';


echo $robotama . "\n";

// die(); // ここで処理が終了する🔥

echo $hakutou . "\n"; // 実行されない

// exit(); // ここで処理が終了する🔥

// 正常終了
// exit;
// exit();
// exit(0);

// エラーコードつきの終了
// exit(1);

echo $momo . "\n"; // 実行されない




// Develop状態や、Debugで使える！

$robotama_array =[
    'ロボ玉試作1号機' => '1000円',
    'ロボ玉試作2号機' => '2000円',
    'ロボ玉試作3号機' => '3000円'
];

var_export($robotama_array) . exit;


$robotama = $robotama_array['ロボ玉'];
// Error: PHP Notice:  Undefined index: ロボ玉



// die() = exit()

// die => exit と同等

    // この言語構造は、exit() と同等です。


    // メッセージを出力し、現在のスクリプトを終了する



// exit — メッセージを出力し、現在のスクリプトを終了する

    // 説明 ¶

        // exit(string $status = ?): void

        // exit(int $status): void


        // スクリプトの実行を終了します。 シャットダウン関数 や オブジェクトのデストラクタ は、exit がコールされた場合にも実行されます。

        // exit は言語構造です。 status を指定しない場合は括弧なしでコールできます。


    // パラメータ ¶

        // status
        // status が文字列の場合は、この関数は終了直前に status を表示します。

        // status が int の場合は その値が終了ステータスとして使われ、表示はされません。終了ステータスは 0 から 254 までの値でなければなりません。
        
        // 終了ステータス 255 は PHP に予約されており、使用してはいけません。ステータス 0 は、 プログラムを正常終了させる際に使用します。


    // 戻り値 ¶
        
        // 値を返しません。




// PHP関数die()の使い方

    // 上記の通りスクリプトの終了する事ができるので、

    // ・処理は想定された関数が実行されているのか？
    
    // ・if文の条件は想定通り満たされているのか？

    // こんな事が簡単に確認できます。
