
< chmod-Command について🔥 >


    「 chmod 」（change mode、チェンジモード）は、UNIXおよびUNIX系オペレーティングシステムにおけるシェルコマンドの一種である。 

    ファイルやディレクトリのファイルモード（ファイルパーミッションなど）を変更するのに使われる。


    File-Permission, Directory-Permission => File, Directory に対するCRUDの権限

    Permission => 許可 => 権限設定

    permission denied => アクセス拒否

    denie => 否定する


--------------------------------------------------------------------------------------------------------------------------------------

< Linuxの権限確認と変更(chmod)（超初心者向け） >


1. ファイル・ディレクトリの権限（パーミッション）の確認方法と変更方法


    以下のようなコマンドの謎の数字や

        $ chmod 777 hoge.txt


    以下のような一覧の r や w など謎の英文字について

        -rw-r--r--  1 user user      9  1月 1 00:00 hoge.txt




2. パーミッションの確認

    Linuxコマンドでカレントディレクトリ内のファイルやディレクトリの情報を確認する。


        ls -l

    上記のコマンドを実行すると、以下のような一覧が表示されるかと思います。

        -rw-r--r--  1 user group      9  1月 1 00:00 hoge.txt
        drwxr-xr-x  6 user group  20480  1月 1 00:00 ダウンロード



3. パーミッションの読み方

    「-rw-r--r--」や「drwxr-xr-x」の先頭の謎の10文字についてですが、


    -rw-r--r--


    [ 種別	意味 ]
        
    -	ファイル
    d	ディレクトリ
    l	シンボリックリンク


    最初の１文字目はファイル種別を表しています。

    2文字目から4文字目はファイルの所有者に対する権限を表し、

    5文字目から7文字目はファイルの所有グループに対する権限を表し、

    8文字目から10文字目はその他に対する権限を表しています

    上記から
    
        -rw-r--r--は、

        「 - 」(1行目) => 「ファイル種別」が「ファイル」であり、

        「 rw- 」(2-4行目) => 「所有者」に「読み取り」と「書き込み」の権限があり、

        「 r-- 」(5-7行目) =>「所有グループ」に「読み取り」の権限があり、

        「 r-- 」(8-10行目) =>「その他」に「読み取り」の権限があることを示しています。


        drwxr-xr-xは、
            
        「 d 」(1行目) => 「ファイル種別」が「ディレクトリ」であり、

        「 rwx 」(2-4行目) =>「所有者」に「読み取り」と「書き込み」と「実行」の権限があり、

        「 r-x 」(5-7行目) =>「所有グループ」に「読み取り」と「実行」の権限があり、

        「 r-x 」(8-10行目) =>「その他」に「読み取り」と「実行」の権限があることを示しています。

    

    ポイントは、「 rwx 」の順で権限解放の設定順が決まっていること🔥



4. アクセス権限の変更

    続きましてアクセス権限を変更する方法について記載します。

    パーミッションの変更にはchmodコマンドを使用します。


4-1. 数値で指定する

        $ ls -l　
        -rw-r--r--  1 user group      9  1月 1 00:00 hoge.txt

        $ chmod 764 hoge.txt

        $ ls -l
        -rwxrw-r--  1 user group      9  1月 1 00:00 hoge.txt


    上記のコマンドはhoge.txtに対してパーミッションの確認→変更→確認を行っています。


        $ chmod 764 hoge.txt
        

    に関して説明していきます。

    ファイルのパーミッションの変更は以下の通りコマンドを実行すれば可能です。

        chmod モード 対象ファイル名


    モードの数字について説明します。


    [ モード(数字)	 モード(アルファベット)	  権限 ]

        4	        r	        読み取り
        2	        w	        書き込み
        1	        x	        実行

        => read, write, execution


    上記の合計値を「所有者」「所有グループ」「その他」の順で入力することでパーミッションを変更することができます。


    要するに上記の「764」は、

    「所有者」に対して「読み取り」「書き込み」「実行」を、

    「所有グループ」に対して「読み取り」「書き込み」を、

    「その他」に「読み取り」を付与しています。



4-2. アルファベットで指定する

    パーミッションをアルファベットで指定することもできます。

    こちらの方が直感的で好む方もいるかと思います。

    まずは数値で指定した時と同じ内容をアルファベットで指定する方法で実行してみます。

        $ ls -l
        -rw-r--r--  1 user group      9  1月 1 00:00 hoge.txt

        $ chmod u+x hoge.txt

        $ ls -l
        -rwxr--r--  1 user group      9  1月 1 00:00 hoge.txt

        $ chmod g+w hoge.txt

        $ ls -l
        -rwxrw-r--  1 user group      9  1月 1 00:00 hoge.txt


    アルファベットでパーミッションを変更するには以下の通りにコマンドを実行します。

        chmod 変更対象 変更方法 変更内容 対象ファイル


        1. 変更対象 => u, g, o, a を指定できる🔥

        2. 変更方法 => =, +, - を指定できる🔥

        3. 変更内容 => r, w, x を指摘できる🔥

        4. 対象ファイル => Directory または、Fileを指摘できる🔥


    例に以下のコマンドで確認していきます。


        $ chmod u+x hoge.txt

    uが変更対象、+が変更方法、xが変更内容となります。


    変更対象については以下のいずれかになります。


    変更対象	意味
    
    u	ユーザー
    g	グループ
    o	その他
    a	すべて


    変更方法については以下のいずれかになります。

    変更方法	意味

    =	指定した権限にする
    +	指定した権限を付与する
    -	指定した権限を除去する


    変更内容については上記でも記した通りです。

    変更内容	意味

    r	読み取り
    w	書き込み
    x	実行


    なので、


        $ chmod u+x hoge.txt

    はhoge.txtに対して所有者の実行権限が付与しています。


    もちろん複数指定もできます。

        $ chmod go+w hoge.txt
    
                や

        $ chmod a-wx hoge.txt

    と実行することもできます。


    数値で指定とアルファベットで指定のどちらを使用するかは、

    好みな方、間違わない確実な方を使用していきましょう。




Linuxの権限確認と変更(chmod)（超初心者向け）
https://qiita.com/shisama/items/5f4c4fa768642aad9e06

--------------------------------------------------------------------------------------------------------------------------------------

< 実践-権限解放🔥 >



drwxr-xr-x.   4 root root      4096 Sep  7 09:01 nginx



    最初の１文字目はファイル種別を表しています。

    2文字目から4文字目はファイルの所有者に対する権限を表し、

    5文字目から7文字目はファイルの所有グループに対する権限を表し、

    8文字目から10文字目はその他に対する権限を表しています



    d => Directory🔥

    rwx => ファイル所有者は、rwx すべて可能🔥

    r-x => ファイルの所有グループは、 r(read)とx(execution) が可能🔥

    r-x => その他は、r(read)とx(execution) が可能🔥


「 -R 」=> 再帰的に権限を解放する => 内部のすべてのファイルを同様の権限設定にする🔥

    chmod -R 777 nginx/

    chmod -r u+w nginx/




$ chmod 777 packages/
chmod: 'packages/' のパーミッションを変更しています: 許可されていない操作です


# sudo が必要な場合もあるので注意🔥

sudo chmod 777 packages/



# Success => 再帰的に、Directory直下のすべてのファイルの権限を解放🔥
sudo chmod -R 777 packages/





Linuxコマンド chmod（ファイルやディレクトリのアクセス権を変更する）
https://kcfran.com/2021/04/21/linux-command-chmod/


アクセス権（パーミッション）の変更 - chmod
https://kazmax.zpp.jp/linux_beginner/chmod.html


超簡単、Linuxの権限設定！ファイルとディレクトリの権限を確認or変更するには？(chmod)
https://hombre-nuevo.com/linux/linux0024/




