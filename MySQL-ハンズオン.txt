
< 【MySQLハンズオン講座】 MySQL (MariaDB)の基本的な操作方法まとめ🔥 >

[ 1. Login/Logout関連の操作 ]


1. MySQL (MariaDB) にLoginする => DBを直接操作するために、Loginする🔥

# localhostのMySQLサーバに接続する場合
$ mysql -u [ユーザー名] -p

    mysql -u root -p 

    # Passwordの入力を求められるので、入力してEnter
    Enter password: robotama
        
    Welcome to the MariaDB monitor.  Commands end with ; or \g.
    Your MySQL connection id is 4
    Server version: 5.7.36-log MySQL Community Server (GPL)

    Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.

    Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

    MySQL [(none)]>


    # 「 MySQL [(none)]> 」が表示されれば、DBに入っています🔥


2. MySQL (MariaDB)からのLogout

\q
quit
exit





3. MySQL にDataBase名指定でログインする🔥

    mysql -u root -p RobotamaDB

    Users\Robotama\Desktop> mysql -u root -p RobotamaDB
    Enter password: ********
    Welcome to the MariaDB monitor.  Commands end with ; or \g.
    Your MySQL connection id is 7
    Server version: 5.7.36-log MySQL Community Server (GPL)

    Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.

    Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

    MySQL [RobotamaDB]>




[ 2. ヘルプ🔥 ]

MySQL (MariaDB)にLoginしている状態で、

help
\h

# [ 実行結果 ]
General information about MariaDB can be found at
http://mariadb.org

List of all client commands:
Note that all text commands must be first on line and end with ';'
?         (\?) Synonym for `help'.
clear     (\c) Clear the current input statement.
connect   (\r) Reconnect to the server. Optional arguments are db and host.
delimiter (\d) Set statement delimiter.
ego       (\G) Send command to MariaDB server, display result vertically.
exit      (\q) Exit mysql. Same as quit.
go        (\g) Send command to MariaDB server.
help      (\h) Display this help.
notee     (\t) Don't write into outfile.
print     (\p) Print current command.
prompt    (\R) Change your mysql prompt.
quit      (\q) Quit mysql.
rehash    (\#) Rebuild completion hash.
source    (\.) Execute an SQL script file. Takes a file name as an argument.
status    (\s) Get status information from the server.
tee       (\T) Set outfile [to_outfile]. Append everything into given outfile.
use       (\u) Use another database. Takes database name as argument.
charset   (\C) Switch to another charset. Might be needed for processing binlog with multi-byte charsets.
warnings  (\W) Show warnings after every statement.
nowarning (\w) Don't show warnings after every statement.

For server side help, type 'help contents'



[ 2. DBの操作系統🔥 ]

2-1. DBの確認・データベース一覧の表示

MariaDBに入った状態で次のMySQL-CLIを実行する🔥

MySQL [(none)]> show databases;

+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
4 rows in set (0.282 sec)


2-2. データベースの追加(RobotamaDB を追加する場合)


MySQL [(none)]> create database RobotamaDB;
Query OK, 1 row affected (0.067 sec)


MySQL [(none)]> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| robotamadb         |
| sys                |
+--------------------+
5 rows in set (0.001 sec)



2-3. データベースの選択(RobotamaDB を選択する場合)


MySQL [(none)]> use robotamadb;
Database changed
MySQL [robotamadb]>




[ 3. Tableの操作系統🔥 ]


3-1. テーブル一覧の表示

MySQL [robotamadb]> show tables;
Empty set (0.038 sec)


もっと詳細が知りたければ、次のコマンド🔥

MySQL [robotamadb]> show tables;

3-2. テーブルの作成


create table `users` (
    `id` int NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT "ID",
    `user_name` VARCHAR(100) NOT NULL COMMENT "ユーザー名",
    `mail_address` VARCHAR(200) NOT NULL COMMENT "メールアドレス",
    `password` VARCHAR(100) NOT NULL COMMENT "パスワード",
    `created` datetime DEFAULT NULL COMMENT "登録日",
    `modified` datetime DEFAULT NULL COMMENT "更新日"
) ENGINE=InnoDB DEFAULT CHARSET=utf8;



MySQL [robotamadb]> create table `users` (
    ->     `id` int NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT "ID",
    ->     `user_name` VARCHAR(100) NOT NULL COMMENT "ユーザー名",
    ->     `mail_address` VARCHAR(200) NOT NULL COMMENT "メールアドレス",
    ->     `password` VARCHAR(100) NOT NULL COMMENT "パスワード",
    ->     `created` datetime DEFAULT NULL COMMENT "登録日",
    ->     `modified` datetime DEFAULT NULL COMMENT "更新日"
    -> ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
Query OK, 0 rows affected (0.582 sec)


MySQL [robotamadb]> show tables;
+----------------------+
| Tables_in_robotamadb |
+----------------------+
| users                |
+----------------------+
1 row in set (0.000 sec)



MySQL [robotamadb]> show table status;
+-------+--------+---------+------------+------+----------------+-------------+-----------------+--------------+-----------+----------------+---------------------+-------------+------------+-----------------+----------+----------------+---------+
| Name  | Engine | Version | Row_format | Rows | Avg_row_length | Data_length | Max_data_length | Index_length | Data_free | Auto_increment | Create_time         | Update_time | Check_time | Collation       | Checksum | Create_options | Comment |
+-------+--------+---------+------------+------+----------------+-------------+-----------------+--------------+-----------+----------------+---------------------+-------------+------------+-----------------+----------+----------------+---------+
| users | InnoDB |      10 | Dynamic    |    0 |              0 |       16384 |               0 |            0 |         0 |              1 | 2022-11-14 10:24:11 | NULL        | NULL       | utf8_general_ci |     NULL |                |         |
+-------+--------+---------+------------+------+----------------+-------------+-----------------+--------------+-----------+----------------+---------------------+-------------+------------+-----------------+----------+----------------+---------+
1 row in set (0.060 sec)




3-2. テーブルの削除


    mysql > DROP TABLE [テーブル名]

        TABLEが存在しない時にエラーで止めたくなければ、

        次のように IF EXISTS を追加することでTABLEが存在する時のみ DROP TABLE 文を実行するようにできます。

    mysql > DROP TABLE IF EXISTS [テーブル名]



    create table `robotama` (
    `id` int NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT "ID",
    `robotama_name` VARCHAR(100) NOT NULL COMMENT "ロボ玉の名前",
    `from` VARCHAR(200) NOT NULL COMMENT "出身地");

    Query OK, 0 rows affected (0.239 sec)

    MySQL [RobotamaDB]> show tables;
    +----------------------+
    | Tables_in_robotamadb |
    +----------------------+
    | robotama             |
    | users                |
    +----------------------+
    2 rows in set (0.001 sec)


    MySQL [RobotamaDB]> drop table robotama;
    Query OK, 0 rows affected (0.211 sec)

    MySQL [RobotamaDB]> show tables;
    +----------------------+
    | Tables_in_robotamadb |
    +----------------------+
    | users                |
    +----------------------+
    1 row in set (0.001 sec)




3-3. テーブル名の変更

    ALTER => 「変更する」と言う意味の英単語

    mysql > ALTER TABLE [旧テーブル名] RENAME [新テーブル名]


    MySQL [RobotamaDB]> create table `robotama` (
    ->     `id` int NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT "ID",
    ->     `robotama_name` VARCHAR(100) NOT NULL COMMENT "ロボ玉の名前",
    ->     `from` VARCHAR(200) NOT NULL COMMENT "出身地");
    Query OK, 0 rows affected (0.176 sec)

    MySQL [RobotamaDB]> alter table robotama rename rename_robotama;
    Query OK, 0 rows affected (0.115 sec)

    MySQL [RobotamaDB]> show tables;
    +----------------------+
    | Tables_in_robotamadb |
    +----------------------+
    | rename_robotama      |
    | users                |
    +----------------------+
    2 rows in set (0.000 sec)



3-4. テーブルにカラムの追加


mysql > ALTER TABLE [テーブル名] ADD [追加カラム名] [型] [必要であればオプション等];

    # 例(動作確認してないのであやふやですがこんな感じ)
    #  users に tel という int 型のカラム を デフォルトNULL で定義し、コメントには 電話番号 といれておき、 mail_addressカラムの後ろ に追加する

    mysql > ALTER TABLE users ADD tel int DEFAULT NULL COMMENT "電話番号" AFTER mail_address;


MySQL [RobotamaDB]> ALTER TABLE users ADD tel int DEFAULT NULL COMMENT "電話番号" AFTER mail_address;
Query OK, 0 rows affected (0.588 sec)
Records: 0  Duplicates: 0  Warnings: 0

MySQL [RobotamaDB]> desc users;
+--------------+--------------+------+-----+---------+----------------+
| Field        | Type         | Null | Key | Default | Extra          |
+--------------+--------------+------+-----+---------+----------------+
| id           | int(11)      | NO   | PRI | NULL    | auto_increment |
| user_name    | varchar(100) | NO   |     | NULL    |                |
| mail_address | varchar(200) | NO   |     | NULL    |                |
| tel          | int(11)      | YES  |     | NULL    |                |
| password     | varchar(100) | NO   |     | NULL    |                |
| created      | datetime     | YES  |     | NULL    |                |
| modified     | datetime     | YES  |     | NULL    |                |
+--------------+--------------+------+-----+---------+----------------+
7 rows in set (0.023 sec)

MySQL [RobotamaDB]> show full columns from users;
+--------------+--------------+-----------------+------+-----+---------+----------------+---------------------------------+----------------+
| Field        | Type         | Collation       | Null | Key | Default | Extra          | Privileges                      | Comment        |
+--------------+--------------+-----------------+------+-----+---------+----------------+---------------------------------+----------------+
| id           | int(11)      | NULL            | NO   | PRI | NULL    | auto_increment | select,insert,update,references | ID             |
| user_name    | varchar(100) | utf8_general_ci | NO   |     | NULL    |                | select,insert,update,references | ユーザー名     |
| mail_address | varchar(200) | utf8_general_ci | NO   |     | NULL    |                | select,insert,update,references | メールアドレス |
| tel          | int(11)      | NULL            | YES  |     | NULL    |                | select,insert,update,references | 電話番号       |
| password     | varchar(100) | utf8_general_ci | NO   |     | NULL    |                | select,insert,update,references | パスワード     |
| created      | datetime     | NULL            | YES  |     | NULL    |                | select,insert,update,references | 登録日         |
| modified     | datetime     | NULL            | YES  |     | NULL    |                | select,insert,update,references | 更新日         |
+--------------+--------------+-----------------+------+-----+---------+----------------+---------------------------------+----------------+
7 rows in set (0.045 sec)



3-5. テーブル設計の確認

mysql > desc [テーブル名]



MySQL [RobotamaDB]> desc users;
+--------------+--------------+------+-----+---------+----------------+
| Field        | Type         | Null | Key | Default | Extra          |
+--------------+--------------+------+-----+---------+----------------+
| id           | int(11)      | NO   | PRI | NULL    | auto_increment |
| user_name    | varchar(100) | NO   |     | NULL    |                |
| mail_address | varchar(200) | NO   |     | NULL    |                |
| tel          | int(11)      | YES  |     | NULL    |                |
| password     | varchar(100) | NO   |     | NULL    |                |
| created      | datetime     | YES  |     | NULL    |                |
| modified     | datetime     | YES  |     | NULL    |                |
+--------------+--------------+------+-----+---------+----------------+
7 rows in set (0.023 sec)



もっと詳細が知りたければ


mysql > SHOW FULL COLUMNS FROM [テーブル名];


MySQL [RobotamaDB]> show full columns from users;
+--------------+--------------+-----------------+------+-----+---------+----------------+---------------------------------+----------------+
| Field        | Type         | Collation       | Null | Key | Default | Extra          | Privileges                      | Comment        |
+--------------+--------------+-----------------+------+-----+---------+----------------+---------------------------------+----------------+
| id           | int(11)      | NULL            | NO   | PRI | NULL    | auto_increment | select,insert,update,references | ID             |
| user_name    | varchar(100) | utf8_general_ci | NO   |     | NULL    |                | select,insert,update,references | ユーザー名     |
| mail_address | varchar(200) | utf8_general_ci | NO   |     | NULL    |                | select,insert,update,references | メールアドレス |
| tel          | int(11)      | NULL            | YES  |     | NULL    |                | select,insert,update,references | 電話番号       |
| password     | varchar(100) | utf8_general_ci | NO   |     | NULL    |                | select,insert,update,references | パスワード     |
| created      | datetime     | NULL            | YES  |     | NULL    |                | select,insert,update,references | 登録日         |
| modified     | datetime     | NULL            | YES  |     | NULL    |                | select,insert,update,references | 更新日         |
+--------------+--------------+-----------------+------+-----+---------+----------------+---------------------------------+----------------+
7 rows in set (0.045 sec)







[ 4. レコード操作関連 ]


4-0. 指定テーブルからすべてのレコードを取得する🔥

MySQL [RobotamaDB]> select * from users;
+----+-----------------+-----------------------+------+----------+---------------------+---------------------+
| id | user_name       | mail_address          | tel  | password | created             | modified            |
+----+-----------------+-----------------------+------+----------+---------------------+---------------------+
|  1 | ぷるぷるロボ玉  | robtoama@gmai.com     | NULL | 12345    | 2022-11-14 10:41:02 | 2022-11-14 10:41:02 |
|  2 | ロボ玉試作1号機 | prototype1@gmai.com   | NULL | 12       | 2022-11-14 10:44:29 | 2022-11-14 10:44:29 |
|  3 | Neo-Robotama    | neo_robotama@gmai.com | NULL | 123      | 2022-11-14 10:44:39 | 2022-11-14 10:44:39 |
+----+-----------------+-----------------------+------+----------+---------------------+---------------------+
3 rows in set (0.017 sec)


4-1. レコード(実データ)の追加

mysql > INSERT INTO [テーブル名] [フィールド名] VALUES [値]


MySQL [RobotamaDB]> INSERT INTO users (user_name, mail_address, password, created, modified) VALUES ("ぷるぷるロボ玉", "robtoama@gmai.com", "12345", now(), now());
Query OK, 1 row affected (0.091 sec)


INSERT INTO users (user_name, mail_address, password, created, modified) VALUES ("ロボ玉試作1号機", "prototype1@gmai.com", "12", now(), now());

INSERT INTO users (user_name, mail_address, password, created, modified) VALUES ("Neo-Robotama", "neo_robotama@gmai.com", "123", now(), now());


    now() ・・・ 現在の日時が入力される関数


4-2. レコード(実データ)の更新

mysql > UPDATE [テーブル名] SET [フィールド名]=[値] WHERE [条件式]


    『WHERE [条件式]』が無しだと、対象が全レコードになります。

    カンマ区切りで複数フィールド更新できます。


update users set user_name = "Robotama-Prototype-2", mail_address = "robotama_2@gmai.com" where id = 3;


[ 実行 & 確認 ]

    MySQL [RobotamaDB]> select * from users;
    +----+-----------------+-----------------------+------+----------+---------------------+---------------------+
    | id | user_name       | mail_address          | tel  | password | created             | modified            |
    +----+-----------------+-----------------------+------+----------+---------------------+---------------------+
    |  1 | ぷるぷるロボ玉  | robtoama@gmai.com     | NULL | 12345    | 2022-11-14 10:41:02 | 2022-11-14 10:41:02 |
    |  2 | ロボ玉試作1号機 | prototype1@gmai.com   | NULL | 12       | 2022-11-14 10:44:29 | 2022-11-14 10:44:29 |
    |  3 | Neo-Robotama    | neo_robotama@gmai.com | NULL | 123      | 2022-11-14 10:44:39 | 2022-11-14 10:44:39 |
    +----+-----------------+-----------------------+------+----------+---------------------+---------------------+
    3 rows in set (0.017 sec)

    MySQL [RobotamaDB]> update users set user_name = "Robotama-Prototype-2", mail_address = "robotama_2@gmai.com" where id = 3;
    Query OK, 1 row affected (0.102 sec)
    Rows matched: 1  Changed: 1  Warnings: 0

    MySQL [RobotamaDB]> select * from users;
    +----+----------------------+---------------------+------+----------+---------------------+---------------------+
    | id | user_name            | mail_address        | tel  | password | created             | modified            |
    +----+----------------------+---------------------+------+----------+---------------------+---------------------+
    |  1 | ぷるぷるロボ玉       | robtoama@gmai.com   | NULL | 12345    | 2022-11-14 10:41:02 | 2022-11-14 10:41:02 |
    |  2 | ロボ玉試作1号機      | prototype1@gmai.com | NULL | 12       | 2022-11-14 10:44:29 | 2022-11-14 10:44:29 |
    |  3 | Robotama-Prototype-2 | robotama_2@gmai.com | NULL | 123      | 2022-11-14 10:44:39 | 2022-11-14 10:44:39 |
    +----+----------------------+---------------------+------+----------+---------------------+---------------------+
    3 rows in set (0.000 sec)



4-3. レコード(実データ)の削除

4-3-1. 全レコード削除

mysql > DELETE FROM [テーブル名]



4-3-2. 一部レコード削除

mysql > DELETE FROM [テーブル名] WHERE [条件式]


delete from users where id = 3;


    MySQL [RobotamaDB]> select * from users;
    +----+----------------------+---------------------+------+----------+---------------------+---------------------+
    | id | user_name            | mail_address        | tel  | password | created             | modified            |
    +----+----------------------+---------------------+------+----------+---------------------+---------------------+
    |  1 | ぷるぷるロボ玉       | robtoama@gmai.com   | NULL | 12345    | 2022-11-14 10:41:02 | 2022-11-14 10:41:02 |
    |  2 | ロボ玉試作1号機      | prototype1@gmai.com | NULL | 12       | 2022-11-14 10:44:29 | 2022-11-14 10:44:29 |
    |  3 | Robotama-Prototype-2 | robotama_2@gmai.com | NULL | 123      | 2022-11-14 10:44:39 | 2022-11-14 10:44:39 |
    +----+----------------------+---------------------+------+----------+---------------------+---------------------+
    3 rows in set (0.000 sec)

    MySQL [RobotamaDB]> delete from users where id = 3;
    Query OK, 1 row affected (0.059 sec)

    MySQL [RobotamaDB]> select * from users;
    +----+-----------------+---------------------+------+----------+---------------------+---------------------+
    | id | user_name       | mail_address        | tel  | password | created             | modified            |
    +----+-----------------+---------------------+------+----------+---------------------+---------------------+
    |  1 | ぷるぷるロボ玉  | robtoama@gmai.com   | NULL | 12345    | 2022-11-14 10:41:02 | 2022-11-14 10:41:02 |
    |  2 | ロボ玉試作1号機 | prototype1@gmai.com | NULL | 12       | 2022-11-14 10:44:29 | 2022-11-14 10:44:29 |
    +----+-----------------+---------------------+------+----------+---------------------+---------------------+
    2 rows in set (0.000 sec)





< User情報を取得する🔥 >

1. User情報を取得する🔥

MariaDB [(none)]> select user from mysql.user;
+-------------+
| User        |
+-------------+
| root        |
| root        |
| root        |
| mariadb.sys |
| root        |
+-------------+
5 rows in set (0.001 sec)


MySQL [RobotamaDB]> select user from mysql.user;
+---------------+
| user          |
+---------------+
| mysql.session |
| mysql.sys     |
| root          |
+---------------+
3 rows in set (0.135 sec)




# User情報とHost情報を取得する🔥

MariaDB [(none)]> select user, host from mysql.user;
+-------------+-----------+
| User        | Host      |
+-------------+-----------+
| root        | 127.0.0.1 |
| root        | ::1       |
| root        | robotama  |
| mariadb.sys | localhost |
| root        | localhost |
+-------------+-----------+
5 rows in set (0.001 sec)


MySQL [RobotamaDB]> select user, host from mysql.user;
+---------------+-----------+
| user          | host      |
+---------------+-----------+
| mysql.session | localhost |
| mysql.sys     | localhost |
| root          | localhost |
+---------------+-----------+
3 rows in set (0.000 sec)



# userName, Host, Password の確認する🔥

MariaDB [(none)]> select user, host, password from mysql.user;
+-------------+-----------+-------------------------------------------+
| User        | Host      | Password                                  |
+-------------+-----------+-------------------------------------------+
| mariadb.sys | localhost |                                           |
| root        | localhost | *81F5E21E35407D884A6CD4A731AEBFB6AF209E1B |
| root        | robotama  | *81F5E21E35407D884A6CD4A731AEBFB6AF209E1B |
| root        | 127.0.0.1 | *81F5E21E35407D884A6CD4A731AEBFB6AF209E1B |
| root        | ::1       | *9E1AA81F840662856BA1AFA79A5DB9B99140499C |
+-------------+-----------+-------------------------------------------+
5 rows in set (0.001 sec)




2. 新しいUserを作成する🔥

    新しくユーザを作成するためには、CREATE USER文を使用します。

        CREATE USER 'ユーザ名'@'ホスト名' IDENTIFIED BY 'パスワード';

    ユーザ名、パスワードには、任意の文字列を設定して下さい。
    
    ホスト名には、MySQLへ接続するホストを指定してください。
    
    ホスト名の代わりにIPアドレスやlocalhostを指定することも可能です。


    ひとまず、User名&Passwordだけ設定する

    CREATE USER Robotama IDENTIFIED BY 'FwXjueuzNSqc3hoensC2';

    create user 'Robotama'@'localhost' IDENTIFIED BY 'FwXjueuzNSqc3hoensC2';


    create user Robotama identified by 'robotama-purupuru';


    MySQL [RobotamaDB]> create user Robotama identified by 'robotama-purupuru';
    Query OK, 0 rows affected (0.106 sec)

    MySQL [RobotamaDB]> select user, host from mysql.user;
    +---------------+-----------+
    | user          | host      |
    +---------------+-----------+
    | Robotama      | %         |
    | mysql.session | localhost |
    | mysql.sys     | localhost |
    | root          | localhost |
    +---------------+-----------+
    4 rows in set (0.000 sec)


    create user Robotama@localhost identified by 'robotama-nanoda';

    MySQL [RobotamaDB]> create user Robotama@localhost identified by 'robotama-nanoda';
    Query OK, 0 rows affected (0.000 sec)

    MySQL [RobotamaDB]> select user, host from mysql.user;
    +---------------+-----------+
    | user          | host      |
    +---------------+-----------+
    | Robotama      | %         |
    | Robotama      | localhost |
    | mysql.session | localhost |
    | mysql.sys     | localhost |
    | root          | localhost |
    +---------------+-----------+
    5 rows in set (0.000 sec)



3. Userのパスワードを変更する🔥


    # パスワード変更方法-1
    SET PASSWORD FOR ユーザ名@ホスト名=password('新しいパスワード');

        => 文字列として渡す


    # 現在接続しているユーザーに新しいパスワードを設定する場合
    set password = password('QTvJtwoaqbAUPx663d3u');


    set password = password('robotama-pass');

    MySQL [RobotamaDB]> set password = password('robotama-pass');
    Query OK, 0 rows affected, 1 warning (0.001 sec)

    MySQL [RobotamaDB]>



    # パスワード変更方法-2
    mysqladmin password 新しいパスワード -u ユーザー名 -p

        => パスワードをクオーテーションで囲む必要はない！


    mysqladmin password GunmarBanzai -u Robotama@localhost -p





4. User を削除する🔥
    
    DROP USER Robotama;

    drop user 'Robotama'@'localhost';


    MySQL [(none)]> select user, host from mysql.user;
    +---------------+-----------+
    | user          | host      |
    +---------------+-----------+
    | Robotama      | %         |
    | Robotama      | localhost |
    | mysql.session | localhost |
    | mysql.sys     | localhost |
    | root          | localhost |
    +---------------+-----------+
    5 rows in set (0.000 sec)

    MySQL [(none)]> drop user Robotama@localhost;
    Query OK, 0 rows affected (0.002 sec)

    MySQL [(none)]> select user, host from mysql.user;
    +---------------+-----------+
    | user          | host      |
    +---------------+-----------+
    | Robotama      | %         |
    | mysql.session | localhost |
    | mysql.sys     | localhost |
    | root          | localhost |
    +---------------+-----------+
    4 rows in set (0.000 sec)



    
# Host指定で、接続先を指定する🔥
mysql -u Robotama -p -h 127.0.0.1

mysql -u Robotama -p -h localhost




5.  ユーザーへの権限付与🔥

    5-1. 権限の確認
        
        show grants for Robotama;

        show grants for 'ユーザー名'@'ホスト名';

        show grants for 'Robotama'@'localhost';


        MySQL [(none)]> show grants for Robotama;
        +--------------------------------------+
        | Grants for Robotama@%                |
        +--------------------------------------+
        | GRANT USAGE ON *.* TO 'Robotama'@'%' |
        +--------------------------------------+
        1 row in set (0.025 sec)



        # root User の権限確認をする🔥

        MySQL [(none)]> show grants for root@localhost;
        +---------------------------------------------------------------------+
        | Grants for root@localhost                                           |
        +---------------------------------------------------------------------+
        | GRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost' WITH GRANT OPTION |
        | GRANT PROXY ON ''@'' TO 'root'@'localhost' WITH GRANT OPTION        |
        +---------------------------------------------------------------------+
        2 rows in set (0.016 sec)



    5-2. 権限の付与
    
        GRANT 権限 ON データベース名.テーブル名 TO 'ユーザー名';

        grant all on RobotamaDB.* to Robotama;

        grant all on RobotamaDB.* to Robotama@localhost;

        GRANT ALL PRIVILEGES ON * . * TO Robotama@localhost;


        # 権限を付与した後のReload => 付与した権限設定の反映

        FLUSH PRIVILEGES;

            
        MySQL [(none)]> grant all on RobotamaDB.* to Robotama;
        Query OK, 0 rows affected (0.040 sec)

        MySQL [(none)]> flush privileges;
        Query OK, 0 rows affected (0.021 sec)



        MySQL [(none)]> grant all on RobotamaDB.* to Robotama;
        Query OK, 0 rows affected (0.040 sec)

        MySQL [(none)]> flush privileges;
        Query OK, 0 rows affected (0.021 sec)

        MySQL [(none)]> show grants for Robotama;
        +----------------------------------------------------------+
        | Grants for Robotama@%                                    |
        +----------------------------------------------------------+
        | GRANT USAGE ON *.* TO 'Robotama'@'%'                     |
        | GRANT ALL PRIVILEGES ON `robotamadb`.* TO 'Robotama'@'%' |
        +----------------------------------------------------------+
        2 rows in set (0.000 sec)




< データベースのダンプを取る🔥 >


Database の Dumpファイルを取る => Dumpは、外部から取れる🔥


    mysqldump -u [ユーザー名] -p -x test_db > [出力ファイル名]


    # MariaDBからdumpファイルを生成する！

    mysqldump -u root -p RobotamaDB >RobotamaDB.dump

    または、、、

    mysqldump -u root -p RobotamaDB >RobotamaDB.sql


    User\Robotama\Desktop> mysqldump -u root -p RobotamaDB >RobotamaDB.dump
    Enter password: *************
    PS C:\Users\suda\Desktop>



    # Dumpファイルを取る🔥
    mysqldump -u root -p RobotamaCMS > robotama.dump

    # Restoreする🔥
    mysql -u root -p RobotamaCMS < C:\robotama.dump



< SQL実行結果をファイルに出力する🔥 >

mysql -u root -p -e "select * from users" test_db > /tmp/mysql.txt

mysql -u ユーザー名 -p -e "SQLの実行文" SQLの対象DB > 出力先のPath

mysql -u root -p -e "select * from users" RobotamaDB > C:\Users\Robotama\Desktop\robotama.txt






< MariaDBのポートを確認する >

MariaDBが接続するときに使うポート番号を確認します。

デフォルトのままであれば、3306です。

mysql > show variables like 'port';

+---------------+-------+
| Variable_name | Value |
+---------------+-------+
| port          | 3306  |
+---------------+-------+


MySQL [RobotamaDB]> show variables like 'port';
+---------------+-------+
| Variable_name | Value |
+---------------+-------+
| port          | 3306  |
+---------------+-------+
1 row in set, 1 warning (0.025 sec)






< 参考・引用🔥 >


1. よく使うMySQLコマンド&構文集
https://qiita.com/CyberMergina/items/f889519e6be19c46f5f4



2. 【MariaDB/MySQL】外部接続の設定方法
https://blog.websandbag.com/entry/2018/06/03/223431




3. MySQLで新しいユーザーを作成して権限を付与する方法
https://www.digitalocean.com/community/tutorials/how-to-create-a-new-user-and-grant-permissions-in-mysql-ja



4. 【MySQL入門】ユーザー作成の方法を解説！8.0からの変更点も紹介
https://www.sejuku.net/blog/82303



5. MySQLでユーザを作成し、権限を設定する方法
https://proengineer.internous.co.jp/content/columnfeature/6638


6. MySQLでパスワードを変更する「SET PASSWORD」
https://uxmilk.jp/12396








