
はじめに
React hooksでは副作用の処理を目的としたuseEffectがあります。

本記事ではuseEffectの基本的な使い方の解説を行った後に、

非同期処理とuseEffectを組み合わせた外部APIの取得方法を先日作ったCOVID-19トラッカーの実装を基に解説していきます。

useEffectとは
まずはuseEffectについてです。

useEffectの役割は「関数の実行タイミングをReactのレンダリング後まで遅らせる事」です。
関数がレンダリングを行って画面に反映された後に実行されるので、DOMの書き換え、変数の代入、API通信などの副作用を扱うのに適しています。

以下が基本形です。


useEffect(
        () => {
            実行関数
        },
        [ 依存配列 ]
    );
Copy
第一引数は実行関数で、第二引数が依存配列になります。

実行関数はレンダリングするたびに新しく作られる
実行関数はuseEffectが呼び出されるごとに新しく作られるので、画像の様にif文を使ったり、状況に応じて処理を変えることなども可能です


題材として先日作ったCOVID-19トラッカーの実装を扱っていきます。

ReactでCOVID-19トラッカー作成で学べる3つの事
Github:https://github.com/gunners6518/covid_19_tracker

画像の様にcovid-19のapiデータを外部から取得して表示する処理を行います。
所得できるまでの時間はLoading画面を出します。

まずコールバックの中にasync関数やPromiseはいれられません。
useEffectの戻り値はundifinedかクリーンアップ関数でなくていけないからです。




< 参照 >
https://terrblog.com/useeffect%E3%81%AE%E5%9F%BA%E6%9C%AC%E7%9A%84%E3%81%AA%E4%BD%BF%E3%81%84%E6%96%B9%E3%81%A8%E9%9D%9E%E5%90%8C%E6%9C%9F%E5%87%A6%E7%90%86%E3%81%AE%E3%82%84%E3%82%8A%E6%96%B9/



