
< 【初心者向け】シェルスクリプトforの使い方（各種サンプル付き） >

シェルスクリプトでのforは、C言語やJavaとくらべると少々勝手が違うように思える。

Javaなどのfor文は「ループカウンタ」を用意しカウンタの数だけ繰り返しすることが殆どだろう。

しかしbashの場合は「ワードリスト」を使って繰り返しをするという違いがある。

実際Javaなどのfor文のような記述も出来るようになっているが、ワードリストをつかうほうがbashでは一般的だ。

ワードリストの数だけ繰り返し処理がおこなわれることになるというのは、少々イメージしにくいかもしれない、そこは、後ほどサンプルコードをみれば、捕まえるはずだ。

シェルスクリプトでのforは、比較的繰り返し条件が単純な場合に利用される。複雑な条件式が必要な場合別途紹介する「while」を使用するのが一般的だろう。

スクリプトにおいて繰り返し処理は「単調な繰り返し作業を自動化」するのに重要な役割をはたすので積極的に活用しよう。


1. 一般的な書式

    for 変数 in リスト
    do
    処理...
    done

    リストの個数だけ処理が実行されるという書式になる。


2. もしくはC言語やJava風の記述が可能(bashの場合のみ)


    C言語やJavaなど一般的なプログラミング言語のような記述も可能だ。

    10回testを表示する場合の例

        for ((i=0 ; i<10 ; i++))
        do
        echo "test"
        done

    「 () 」が二重になるところとセミコロンに気をつけてほしい



3. シェルスクリプトforのサンプルコード

Shell-Script

    #!/usr/bin/bash
    #for文 iは任意の変数一般的に「i」「j」「k」「n」なとが使われることが多い
    #inより後ろを順に代入してゆくことになる。
    for i in aa bb cc
    do
    echo $i
    done



4. もう少し実践的なfor文

4-1. seqを使う

    seqは連続した数字を出力するコマンドだ。

        => Sequence: 順序

    こうした一見不思議なコマンドは、スクリプト記述の時に役に立つように作られていることが多い。

    例えば、

    $ seq 10

    とすると1から10までの数字が表示される。

    これを利用すると以下のようにforを記述することが出来る


    Shell-Script

        #!/usr/bin/bash
        #echo "test"が10回実行される。
        for i in `seq 10`
        do
        echo "test"
        done


4-2. 必ずリストの中身を使わなければならないというわけではない

    また実際にリストの数だけ繰り返しがおこなわれるが、かならずしもリストの内容を使用しなければならないというわけではない。

    Shell-Script

        #!/usr/bin/bash
        #echo "test"が3回実行される。
        for i in aa bb cc
        do
        echo "test"
        done


4-3. 繰り返しを利用しバックアップをとる場合など


    Shell-Script

        #!/usr/bin/bash
        #lsで表示されたtxtをリストとして扱う。
        for file_name in `ls *.txt`
        do
        #cpコマンドで名前に変数の値を参照、最後に.backの文字を追加してコピー
        cp "$file_name" "$file_name.back"
        done


4-4. シェル上にて一行で繰り返しを行う。


    Shell-Script

        for var in
        seq 10
        ; do touch testfile"$var".txt; done


    連番のファイルなどをパッと作りたいしかし、スクリプトを書くほど大規模ではないなど、
    そういうときはコマンドプロンプトから直接for文を呼び出すこともできる。

    上の例を参照してほしい。
    
    セミコロンの位置に注意しよう。
    
    forの条件のあとと、doの条件のあとにセミコロンが挿入される。
    
    この例ではtestfile1.txtからtestfile10.txtが作成される。

    セミコロンがない場合、以下のような対話的な処理となる。



< 参考・引用 >

【初心者向け】シェルスクリプトforの使い方（各種サンプル付き）
https://eng-entrance.com/linux-shellscript-for


